
R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: i386-w64-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(norm2)
> 
> ## run EM on fake data with missing values
> set.seed(1234)
> simdata <- data.frame(
+    Y1=rnorm(10), Y2=rnorm(10), Y3=rnorm(10), X1=rnorm(10) )
> simdata$Y3[7] <- simdata$Y2[3]<- NA
> emResult <- emNorm( cbind(Y1,Y2,Y3) ~ X1, data=simdata )
> 
> ## predictive mean imputation under MLE
> imp <- impNorm( emResult, method="predict")
> print( round( imp, 5 ) )
         Y1       Y2       Y3
1  -1.20707 -0.47719  0.13409
2   0.27743 -0.99839 -0.49069
3   1.08444 -0.99847 -0.44055
4  -2.34570  0.06446  0.45959
5   0.42912  0.95949 -0.69372
6   0.50606 -0.11029 -1.44820
7  -0.57474 -0.51101 -0.79955
8  -0.54663 -0.91120 -1.02366
9  -0.56445 -0.83717 -0.01514
10 -0.89004  2.41584 -0.93595
> 
> ## random imputation under MLE
> set.seed(1234)
> imp <- impNorm( emResult, method="random")
> print( round( imp, 5 ) )
         Y1       Y2       Y3
1  -1.20707 -0.47719  0.13409
2   0.27743 -0.99839 -0.49069
3   1.08444 -1.62729 -0.44055
4  -2.34570  0.06446  0.45959
5   0.42912  0.95949 -0.69372
6   0.50606 -0.11029 -1.44820
7  -0.57474 -0.51101 -0.70439
8  -0.54663 -0.91120 -1.02366
9  -0.56445 -0.83717 -0.01514
10 -0.89004  2.41584 -0.93595
> 
> ## run EM on marijuana data with ridge prior, then impute
> data(marijuana)
> emResult <- emNorm( marijuana,  prior="ridge", prior.df=0.5 )  
> set.seed(23)
> imp <- impNorm( emResult, method="random")
> print( round( imp, 5 ) )
       Plac.15 Low.15  High.15   Plac.90 Low.90  High.90
 [1,] 16.00000     20 16.00000  20.00000     -6  -4.0000
 [2,] 12.00000     24 12.00000  -6.00000      4  -8.0000
 [3,]  8.00000      8 26.00000  -4.00000      4   8.0000
 [4,] 20.00000      8 -6.25316  14.23064     20  -4.0000
 [5,]  8.00000      4 -8.00000   8.21694     22  -8.0000
 [6,] 10.00000     20 28.00000 -20.00000     -4  -4.0000
 [7,]  4.00000     28 24.00000  12.00000      8  18.0000
 [8,] -8.00000     20 24.00000  -3.00000      8 -24.0000
 [9,]  5.40978     20 24.00000   8.00000     12  17.9796
> 
> ## use cholesterol data
> data(cholesterol)
> emResult <- emNorm(cholesterol)
> set.seed(23)
> imp1 <- impNorm( emResult )
> print( imp1 )
       Y1  Y2       Y3
 [1,] 270 218 156.0000
 [2,] 236 234 223.3566
 [3,] 210 214 242.0000
 [4,] 142 116 145.7101
 [5,] 280 200 227.6671
 [6,] 272 276 256.0000
 [7,] 160 146 142.0000
 [8,] 220 182 216.0000
 [9,] 226 238 248.0000
[10,] 242 288 262.3563
[11,] 186 190 168.0000
[12,] 266 236 236.0000
[13,] 206 244 219.3071
[14,] 318 258 200.0000
[15,] 294 240 264.0000
[16,] 282 294 225.7294
[17,] 234 220 264.0000
[18,] 224 200 159.3131
[19,] 276 220 188.0000
[20,] 282 186 182.0000
[21,] 360 352 294.0000
[22,] 310 202 214.0000
[23,] 280 218 253.5412
[24,] 278 248 198.0000
[25,] 288 278 303.0880
[26,] 288 248 256.0000
[27,] 244 270 280.0000
[28,] 236 242 204.0000
> 
> ## formula notation
> set.seed(23)
> imp2 <- impNorm( cbind(Y1,Y2,Y3)~1, data=cholesterol,
+    param=emResult$param )
> print( imp2 )
    Y1  Y2       Y3
1  270 218 156.0000
2  236 234 223.3566
3  210 214 242.0000
4  142 116 145.7101
5  280 200 227.6671
6  272 276 256.0000
7  160 146 142.0000
8  220 182 216.0000
9  226 238 248.0000
10 242 288 262.3563
11 186 190 168.0000
12 266 236 236.0000
13 206 244 219.3071
14 318 258 200.0000
15 294 240 264.0000
16 282 294 225.7294
17 234 220 264.0000
18 224 200 159.3131
19 276 220 188.0000
20 282 186 182.0000
21 360 352 294.0000
22 310 202 214.0000
23 280 218 253.5412
24 278 248 198.0000
25 288 278 303.0880
26 288 248 256.0000
27 244 270 280.0000
28 236 242 204.0000
> 
> 
> ## use data matrices
> set.seed(23)
> imp3 <- impNorm( cholesterol, param=emResult$param )
> print( imp3 )
       Y1  Y2       Y3
 [1,] 270 218 156.0000
 [2,] 236 234 223.3566
 [3,] 210 214 242.0000
 [4,] 142 116 145.7101
 [5,] 280 200 227.6671
 [6,] 272 276 256.0000
 [7,] 160 146 142.0000
 [8,] 220 182 216.0000
 [9,] 226 238 248.0000
[10,] 242 288 262.3563
[11,] 186 190 168.0000
[12,] 266 236 236.0000
[13,] 206 244 219.3071
[14,] 318 258 200.0000
[15,] 294 240 264.0000
[16,] 282 294 225.7294
[17,] 234 220 264.0000
[18,] 224 200 159.3131
[19,] 276 220 188.0000
[20,] 282 186 182.0000
[21,] 360 352 294.0000
[22,] 310 202 214.0000
[23,] 280 218 253.5412
[24,] 278 248 198.0000
[25,] 288 278 303.0880
[26,] 288 248 256.0000
[27,] 244 270 280.0000
[28,] 236 242 204.0000
> 
> print( all( imp1 == imp2 ) )
[1] TRUE
> print( all( imp1 == imp3 ) )
[1] TRUE
> 
> proc.time()
   user  system elapsed 
   0.51    0.03    0.53 
